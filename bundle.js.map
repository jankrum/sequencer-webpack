{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://web-sequencer-webpack/./src/modules/dm.js","webpack://web-sequencer-webpack/./src/modules/transporter.js","webpack://web-sequencer-webpack/./src/modules/sequencer/paginator.js","webpack://web-sequencer-webpack/./src/modules/sequencer/playbacker.js","webpack://web-sequencer-webpack/./src/index.js","webpack://web-sequencer-webpack/./src/modules/sequencer.js"],"sourcesContent":["function dm(tag, attributes = {}, ...children) {\n    const element = document.createElement(tag)\n\n    for (const [key, value] of Object.entries(attributes)) {\n        element.setAttribute(key, value)\n    }\n\n    for (const child of children) {\n        if (typeof child === 'string') {\n            element.appendChild(document.createTextNode(child))\n        } else {\n            element.appendChild(child)\n        }\n    }\n\n    return element\n}\n\nexport default dm","import dm from './dm.js'\n\nconst BUTTON_SYMBOLS_AND_NAMES = [\n    ['⏮', 'previous'],\n    ['▶', 'play'],\n    ['⏸', 'pause'],\n    ['⏹', 'stop'],\n    ['⏭', 'next'],\n]\n\nconst PLAYBACK_STATE_DICT = {\n    playing: {\n        play: true,\n        pause: false,\n        stop: false,\n    },\n    paused: {\n        play: false,\n        pause: true,\n        stop: false,\n    },\n    stopped: {\n        play: false,\n        pause: true,\n        stop: true,\n    },\n}\n\nclass Transporter {\n    constructor() {\n        this.chartTitleHeading = null\n        this.buttons = {}\n    }\n\n    setUp() {\n        const transporterDiv = document.querySelector('#transporter')\n\n        const chartTitleHeading = this.chartTitleHeading = dm('h2')\n        transporterDiv.appendChild(chartTitleHeading)\n\n        const buttonDiv = dm('div')\n        transporterDiv.appendChild(buttonDiv)\n\n        for (const [symbol, name] of BUTTON_SYMBOLS_AND_NAMES) {\n            const button = dm('button', {}, symbol)\n            this.buttons[name] = button\n            buttonDiv.appendChild(button)\n        }\n    }\n\n    addEventListener(name, callback) {\n        const button = this.buttons[name]\n\n        if (!button) {\n            throw new Error(`Invalid button name: ${name}`)\n        }\n\n        button.addEventListener('click', callback)\n    }\n\n    send({ type, value }) {\n        switch (type) {\n            case 'CHANGE_CHART':\n                this.chartTitleHeading.innerText = value.chartTitle\n                this.buttons.previous.disabled = !value.canPrevious\n                this.buttons.next.disabled = !value.canNext\n                break\n            case 'CHANGE_PLAYBACK':\n                const stateDict = PLAYBACK_STATE_DICT[value]\n\n                if (!stateDict) {\n                    throw new Error(`Invalid playback state: ${value}`)\n                }\n\n                for (const [name, isDisabled] of Object.entries(stateDict)) {\n                    this.buttons[name].disabled = isDisabled\n                }\n                break\n            default:\n                throw new Error(`Invalid type: ${type}`)\n        }\n    }\n}\n\nexport default Transporter","import setlist from '../../static/setlist.json'\r\nconst setlistLength = setlist.length\r\n\r\nfunction loadChart(name) {\r\n    return {\r\n        title: `Title ${name}`\r\n    }\r\n}\r\n\r\nclass Paginator {\r\n    constructor() {\r\n        // The index of the current chart in the setlist\r\n        this.chartIndex = 0\r\n\r\n        // Used to store subscribers\r\n        this.subscribers = []\r\n    }\r\n\r\n    setUp() { }\r\n\r\n    addEventListener(action, callback) {\r\n        switch (action) {\r\n            case 'newChart':\r\n                this.subscribers.push(callback)\r\n                break\r\n            default:\r\n                throw new Error(`Invalid action: ${action}`)\r\n        }\r\n    }\r\n\r\n    send({ type }) {\r\n        switch (type) {\r\n            case 'PREVIOUS':\r\n                if (this.chartIndex > 0) {\r\n                    this.chartIndex -= 1\r\n                    this.newChart()\r\n                }\r\n                break\r\n            case 'NEXT':\r\n                if (this.chartIndex < setlistLength - 1) {\r\n                    this.chartIndex += 1\r\n                    this.newChart()\r\n                }\r\n                break\r\n            case 'INIT':\r\n                console.log('INIT')\r\n                this.newChart()\r\n                break\r\n            default:\r\n                throw new Error(`Invalid type: ${type}`)\r\n        }\r\n    }\r\n\r\n    newChart() {\r\n        console.log(this)\r\n\r\n        const chartName = setlist[this.chartIndex]\r\n        const chart = loadChart(chartName)\r\n        const chartTitle = chart.title\r\n        const canPrevious = this.chartIndex > 0\r\n        const canNext = this.chartIndex < setlistLength - 1\r\n\r\n        for (const subscriber of this.subscribers) {\r\n            subscriber({ chart, chartTitle, canPrevious, canNext })\r\n        }\r\n    }\r\n}\r\n\r\nexport default Paginator","class PlaybackMachine {\r\n    constructor() {\r\n        this.playbackState = 'paused'\r\n        this.chart = null\r\n\r\n        this.subscriptions = {}\r\n    }\r\n\r\n    setUp() { }\r\n\r\n    addEventListener(action, callback) {\r\n        if (!this.subscriptions[action]) {\r\n            this.subscriptions[action] = []\r\n        }\r\n\r\n        this.subscriptions[action].push(callback)\r\n    }\r\n\r\n    send({ type, value }) {\r\n        if (type === 'CHANGE_CHART') {\r\n            this.chart = value\r\n            console.log('playback state when changing chart', this.playbackState)\r\n            if (this.playbackState !== 'stopped') {\r\n                this.send({ type: 'STOP' })\r\n            }\r\n            return\r\n        }\r\n\r\n        switch (this.playbackState) {\r\n            case 'playing':\r\n                switch (type) {\r\n                    case 'PAUSE':\r\n                        this.playbackState = 'paused'\r\n                        this.subscriptions['pause'].forEach(callback => callback())\r\n                        break\r\n                    case 'STOP':\r\n                        this.playbackState = 'stopped'\r\n                        this.subscriptions['stop'].forEach(callback => callback())\r\n                        break\r\n                    default:\r\n                        throw new Error(`Cannot ${type} while playing`)\r\n                }\r\n                break\r\n            case 'paused':\r\n                switch (type) {\r\n                    case 'PLAY':\r\n                        this.playbackState = 'playing'\r\n                        this.subscriptions['resume'].forEach(callback => callback())\r\n                        break\r\n                    case 'STOP':\r\n                        this.playbackState = 'stopped'\r\n                        this.subscriptions['stop'].forEach(callback => callback())\r\n                        break\r\n                    default:\r\n                        throw new Error(`Cannot ${type} while paused`)\r\n                }\r\n                break\r\n            case 'stopped':\r\n                switch (type) {\r\n                    case 'PLAY':\r\n                        this.playbackState = 'playing'\r\n                        this.subscriptions['play'].forEach(callback => callback())\r\n                        break\r\n                    default:\r\n                        throw new Error(`Cannot ${type} while stopped`)\r\n                }\r\n                break\r\n            default:\r\n                throw new Error(`Invalid playback state: ${this.playbackState}`)\r\n        }\r\n    }\r\n}\r\n\r\nexport default PlaybackMachine","import Sequencer from './modules/sequencer.js'\r\nconst sequencer = new Sequencer()\r\nsequencer.setUp()\r\nconsole.log('sequencer', sequencer)","import Transporter from './transporter.js'\r\nimport Paginator from './sequencer/paginator.js'\r\nimport Playbacker from './sequencer/playbacker.js'\r\n\r\nclass Sequencer {\r\n    constructor() {\r\n        this.transporter = new Transporter()\r\n        this.paginator = new Paginator()\r\n        this.playbacker = new Playbacker()\r\n    }\r\n\r\n    setUp() {\r\n        const transporter = this.transporter\r\n        const paginator = this.paginator\r\n        const playbacker = this.playbacker\r\n\r\n        transporter.setUp()\r\n        paginator.setUp()\r\n        playbacker.setUp()\r\n\r\n        transporter.addEventListener('previous', () => {\r\n            paginator.send({ type: 'PREVIOUS' })\r\n        })\r\n\r\n        transporter.addEventListener('next', () => {\r\n            paginator.send({ type: 'NEXT' })\r\n        })\r\n\r\n        transporter.addEventListener('play', () => {\r\n            playbacker.send({ type: 'PLAY' })\r\n        })\r\n\r\n        transporter.addEventListener('pause', () => {\r\n            playbacker.send({ type: 'PAUSE' })\r\n        })\r\n\r\n        transporter.addEventListener('stop', () => {\r\n            playbacker.send({ type: 'STOP' })\r\n        })\r\n\r\n        paginator.addEventListener('newChart', event => {\r\n            const { chart, chartTitle, canPrevious, canNext } = event\r\n\r\n            transporter.send({\r\n                type: 'CHANGE_CHART',\r\n                value: { chartTitle, canPrevious, canNext }\r\n            })\r\n\r\n            playbacker.send({\r\n                type: 'CHANGE_CHART',\r\n                value: chart\r\n            })\r\n        })\r\n\r\n        playbacker.addEventListener('play', () => {\r\n            transporter.send({ type: 'CHANGE_PLAYBACK', value: 'playing' })\r\n        })\r\n\r\n        playbacker.addEventListener('pause', () => {\r\n            transporter.send({ type: 'CHANGE_PLAYBACK', value: 'paused' })\r\n        })\r\n\r\n        playbacker.addEventListener('resume', () => {\r\n            transporter.send({ type: 'CHANGE_PLAYBACK', value: 'playing' })\r\n        })\r\n\r\n        playbacker.addEventListener('stop', () => {\r\n            transporter.send({ type: 'CHANGE_PLAYBACK', value: 'stopped' })\r\n        })\r\n\r\n        // Start everything\r\n        paginator.send({ type: 'INIT' })\r\n    }\r\n}\r\n\r\nexport default Sequencer"],"names":["tag","attributes","children","element","document","createElement","key","value","Object","entries","setAttribute","child","appendChild","createTextNode","BUTTON_SYMBOLS_AND_NAMES","PLAYBACK_STATE_DICT","playing","play","pause","stop","paused","stopped","constructor","this","chartTitleHeading","buttons","setUp","transporterDiv","querySelector","buttonDiv","symbol","name","button","addEventListener","callback","Error","send","type","innerText","chartTitle","previous","disabled","canPrevious","next","canNext","stateDict","isDisabled","setlistLength","length","chartIndex","subscribers","action","push","newChart","console","log","chart","title","subscriber","playbackState","subscriptions","forEach","transporter","paginator","playbacker","event"],"sourceRoot":""}